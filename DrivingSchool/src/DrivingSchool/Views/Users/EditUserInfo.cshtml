@using DrivingSchool.Entities.Enumerations
@model UserEditViewModel

@{
    ViewBag.Title += "Edit " + Model.FirstName + " " + Model.LastName;
}
<div class="container">
    <form method="post">
        <div class="form-group">
            @if (Model.IsManager)
            {
                <button type="button" class="btn btn-default" onclick="location.href = '@Url.Action("ViewUserList")'">
                    <span class="glyphicon glyphicon-arrow-left" aria-hidden="true"></span>
                    Back
                </button>
            }
            else
            {
                <button type="button" class="btn btn-default" onclick="location.href = '@Url.Action("Index", "Home")'">
                    <span class="glyphicon glyphicon-arrow-left" aria-hidden="true"></span>
                    Back
                </button>
            }
            <button type="submit" class="btn btn-success">Save</button>
        </div>
        <div class="well well-sm">
            <h1>User edit</h1>
            <fieldset>
                <div class="form-group">
                    @Html.LabelFor(m => m.FirstName, "First Name")
                    @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.FirstName, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.LastName, "Last Name")
                    @Html.TextBoxFor(m => m.LastName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.LastName, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.BirthDate, "Date of Birth")
                    @Html.TextBoxFor(m => m.BirthDate, "{0:yyyy-MM-dd}", new { @class = "form-control datepicker" })
                    @Html.ValidationMessageFor(m => m.BirthDate, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.PersonalNo, "Personal Identity Number")
                    @Html.TextBoxFor(m => m.PersonalNo, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.PersonalNo, "", new { @class = "text-danger" })
                </div>
                @if (Model.IsManager)
                {
                    <div class="form-group">
                        @Html.LabelFor(m => m.Type, "User Type")
                        @Html.DropDownListFor(m => m.Type, Html.GetEnumSelectList(typeof(UserType)), new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Type, "", new { @class = "text-danger" })
                    </div>

                    string studentFieldsHidden = "";
                    string instructorFieldsHidden = "";

                    @if (Model.Type == UserType.Student || Model.Type == UserType.None)
                    {
                        instructorFieldsHidden = "style=\"display: none;\"";
                    }

                    @if (Model.Type == UserType.Instructor || Model.Type == UserType.Manager || Model.Type == UserType.None)
                    {
                        studentFieldsHidden = "style=\"display: none;\"";
                    }
                    
                    <div class="form-group" @Html.Raw(studentFieldsHidden)>
                        @Html.LabelFor(m => m.PracticeCount, "Practice Count")
                        @Html.TextBoxFor(m => m.PracticeCount, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.PracticeCount, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group" @Html.Raw(studentFieldsHidden)>
                        @Html.LabelFor(m => m.HasTheoryClasses, "Has Theory Classes")
                        @Html.CheckBoxFor(m => m.HasTheoryClasses)
                        @Html.ValidationMessageFor(m => m.HasTheoryClasses, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group" @Html.Raw(instructorFieldsHidden)>
                        @Html.LabelFor(m => m.AssignedCar.Id, "Assigned Car")
                        @Html.DropDownListFor(m => m.AssignedCar.Id, new SelectList(
                            Model.Cars.Select( c => new { Id = c.Id, Name = c.ToString() }), "Id", "Name"), new { @class = "form-control" }
                        )
                        @Html.ValidationMessageFor(m => m.AssignedCar.Id, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.State, "User State")
                        @Html.DropDownListFor(m => m.State, Html.GetEnumSelectList(typeof(UserState)), new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.State, "", new { @class = "text-danger" })
                    </div>
                }
            </fieldset>
        </div>
    </form>
</div>
<script type="text/javascript">
    $("#Type").change(function () {
        if ($("#Type option:selected").text() == "Student") {
            if ($("#PracticeCount").parent().css("display") == "none")
                $("#PracticeCount").parent().toggle(300);
            if ($("#HasTheoryClasses").parent().css("display") == "none")
                $("#HasTheoryClasses").parent().toggle(300);
            if ($("#AssignedCar_Id").parent().css("display") == "block")
                $("#AssignedCar_Id").parent().toggle(300);
        } else if ($("#Type option:selected").text() == "None") { 
            if ($("#PracticeCount").parent().css("display") == "block")
                $("#PracticeCount").parent().toggle(300);
            if ($("#HasTheoryClasses").parent().css("display") == "block")
                $("#HasTheoryClasses").parent().toggle(300);
            if ($("#AssignedCar_Id").parent().css("display") == "block")
                $("#AssignedCar_Id").parent().toggle(300);
        } else { 
            if ($("#PracticeCount").parent().css("display") == "block")
                $("#PracticeCount").parent().toggle(300);
            if ($("#HasTheoryClasses").parent().css("display") == "block")
                $("#HasTheoryClasses").parent().toggle(300);
            if ($("#AssignedCar_Id").parent().css("display") == "none")
                $("#AssignedCar_Id").parent().toggle(300);
        }
    });
</script>